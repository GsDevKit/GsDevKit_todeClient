#! /bin/bash
#=========================================================================
# Copyright (c) 2015 GemTalk Systems, LLC <dhenrich@gemtalksystems.com>.
#=========================================================================

echo "================="
echo "   GsDevKit script: $(basename $0) $*"
echo "================="

usage() {
  cat <<HELP
USAGE: $(basename $0) [-h] [-f] [-p <postfix>] <client-name>

Launch todeClient image.

OPTIONS
  -f
     Rebuild the todeClient image
  -h 
     display help
  -p <postfix>
     Launch the tode client image created with a matching postfix. If
     the tode client image does not exist, build it.

EXAMPLES
  $(basename $0) -h
  $(basename $0) -f tode
  $(basename $0) tode
  $(basename $0) -p _0 tode # Launches the image named todeClient_0.image

HELP
}

set -e # exit on error
if [ "${GS_HOME}x" = "x" ] ; then
  echo "the GS_HOME environment variable needs to be defined"
  exit 1
fi
source ${GS_HOME}/bin/defGsDevKit.env
if [ "${GS_TODE_CLIENT}x" = "x" ] ; then
  echo "the GsDevKit_todeClient project has not been installed correctly or the"
  echo "GS_TODE_CLIENT environment variable has not been defined"
  exit 1
fi

scriptDir=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )
echo "     Pharo STDOUT routed to: ${scriptDir}/logs/todeClient${postFix}.log"

postFix=""
force=""
while getopts "fhp:" OPT ; do
  case "$OPT" in
    f) force="true";;
    h) usage; exit 0 ;;
    p) postFix="${OPTARG}" ;;
    *) usage; exit 1 ;;
  esac
done
shift $(($OPTIND - 1))

clientName=$1

if [ "$force" = "true" ] ; then
  $GS_TODE_CLIENT/bin/createPharoTodeClient -f -p $postFix $clientName
fi

if [ ! -e $scriptDir/todeClient${postFix}.image ] ; then
  echo "The requested todeClient image: $scriptDir/todeClient${postFix}.image does not exist"
  created="false"
  while [ "$created" = "false" ] ; do
    read -p "Do you wish to create todeClient${postFix}? [y/n]" yn
    case $yn in
      [Yy]* ) $GS_TODE_CLIENT/bin/createPharoTodeClient -f -p $postFix $clientName; created="true";;
      [Nn]* ) exit 1;;
      * ) echo "Please answer yes or no.";;
    esac
  done
fi

# Detect operating system
PLATFORM="`uname -sm | tr ' ' '-'`"
# Macs with Core i7 use the same software as older Macs
[ $PLATFORM = "Darwin-x86_64" ] && PLATFORM="Darwin-i386"

vmArgs=""
case "$PLATFORM" in
  Darwin-i386) vmArgs="" ;;
  Linux-x86_64) vmArgs=" --textenc UTF-8" ;;
  *)
    echo "unsupported platform: $PLATFORM"
    exit 1
    ;;
esac

unset GEMSTONE_NRS_ALL
$scriptDir/pharo-ui $vmArgs $scriptDir/todeClient${postFix}.image &> $scriptDir/logs/todeClient${postFix}.log &

echo "...finished $(basename $0)"
