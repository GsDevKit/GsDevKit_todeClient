#! /bin/bash
#=========================================================================
# Copyright (c) 2015 GemTalk Systems, LLC <dhenrich@gemtalksystems.com>.
#=========================================================================

echo "================="
echo "   GsDevKit script: $(basename $0) $*"
echo "================="

usage() {
  cat <<HELP
USAGE: $(basename $0) [-h] [-f] [-p <postfix] [-v Pharo3.0 | Pharo4.0 ] 
                      <client-name>

Create a tODE client image of the given name. Used for running pharo-based 
scripts and for running the tODE client UI.

If a tODE client with the given <client-name> already exists, the installation 
is skipped unless the -f option is specified.

OPTIONS
  -h 
     display help
  -f
     Force tODE client installation, whether or not the image
     already exists.
  -p <postfix>
     Append <postfix> to end of image name. Useful for creating
     multiple tode client images.
  -v Pharo3.0 | Pharo4.0
     Choose the version of Smalltalk to use for the client. Default is Pharo3.0.

EXAMPLES
  $(basename $0) -h
  $(basename $0) -p _0 todeDev
  $(basename $0) -f todeDev
  $(basename $0) -v Pharo3.0 todeDev
  $(basename $0) todeDev

HELP
}

set -e # exit on error
if [ "${GS_HOME}x" = "x" ] ; then
  echo "the GS_HOME environment variable needs to be defined"
  exit 1
fi
source ${GS_HOME}/bin/defGsDevKit.env
if [ "${GS_TODE_CLIENT}x" = "x" ] ; then
  echo "the GsDevKit_todeClient project has not been installed correctly or the"
  echo "GS_TODE_CLIENT environment variable has not been defined"
  exit 1
fi

postFixArg=""
forceArg=""
versionArg=" -v Pharo3.0 "
while getopts ":fhp:" OPT ; do
  case "$OPT" in
    h) usage; exit 0;;
    f) forceArg=" -f ";;
    p) postFixArg=" -p ${OPTARG} ";;
    ?) postFixArg=" -p ";;          # handle optional -p argument "
    v) versionArg=" -v ${OPTARG} ";;
    *) usage; exit 1;;
  esac
done
shift $(($OPTIND - 1))
if [ $# -lt 1 ]; then
  usage; exit 1
fi
clientName=$1

case $version in
  Pharo*) $GS_TODE_CLIENT/bin/createPharoTodeClient $forceArg $postFixArg $versionArg $clientName;;
  *) usage; exit 1;;
esac

echo "...finished $(basename $0)"
